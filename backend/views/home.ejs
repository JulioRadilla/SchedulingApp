<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Home</title>
  <link href="./homePage/style.css" rel="stylesheet" />
</head>
<body>
  <header>
    <nav class="navbar">
      <div class="logo">
        <img src="/src/target.png" />
        <h1>TargetTracker</h1>
      </div>
      <div class="buttons">
        <a href="/"><button class="logout">Log out</button></a>
        <div class="user">
          <svg
            class="user"
            xmlns="http://www.w3.org/2000/svg"
            width="23"
            height="23"
            viewBox="0 0 25 25"
            fill="none"
          >
            <path
              d="M12.5002 0.833252C14.0473 0.833252 15.531 1.44783 16.625 2.5418C17.7189 3.63576 18.3335 5.11949 18.3335 6.66659C18.3335 8.21368 17.7189 9.69741 16.625 10.7914C15.531 11.8853 14.0473 12.4999 12.5002 12.4999C10.9531 12.4999 9.46934 11.8853 8.37537 10.7914C7.28141 9.69741 6.66683 8.21368 6.66683 6.66659C6.66683 5.11949 7.28141 3.63576 8.37537 2.5418C9.46934 1.44783 10.9531 0.833252 12.5002 0.833252ZM12.5002 15.4166C18.946 15.4166 24.1668 18.027 24.1668 21.2499V24.1666H0.833496V21.2499C0.833496 18.027 6.05433 15.4166 12.5002 15.4166Z"
              fill="black"
            />
          </svg>
        </div>
      </div>
    </nav>
  </header>
  <div class="container">
    <h1 id="displayDay"></h1>
    <div class="main-wrapper">
      <div class="main">
        <h2>Welcome <%=fullName%></h2>
        <div class="calendar">
          <img onclick="goBack()" class="arrows" src="/src/back.png" />
          <div id="dateDisplay"><%= formattedDate %></div>
          <img
            onclick="goForward()"
            class="arrows"
            src="/src/forward.png"
          />
        </div>
        <a href="/create-task"
          ><button class="create">Create task</button></a
        >
      </div>
    </div>
    <div class="task-wrapper">
      <div class="task-container">
        <h2 class="task">Task</h2>
        <div  id="task-message" class="task-message">
            <% const matchingTasks = tasks.filter(task => task.date === formattedDate); %>
            <% if (matchingTasks.length > 0) { %>
                <!-- Iterate through matching tasks and display them -->
                <% matchingTasks.forEach(task => { %>
                <p>
                    Task: <%= task.taskTitle %><br>
                    Date: <%= task.date %><br>
                    Time: <%= task.time %><br>
                    Description: <%= task.description %>
                </p>
                <% }); %>
            <% } else { %>
                <!-- No tasks for this date message -->
                <p>No tasks for this date! Use 'Create Task' to plan something or enjoy a free day. ðŸŒŸ</p>
            <% } %>
        </div>
      </div>
    </div>
  </div>
  <footer>
    <div class="footer-content">
      <ul class="footer-list">
        <li>Privacy</li>
        <li>About</li>
        <li>Contact</li>
      </ul>
      <div class="footer-task-version">
        <div>TaskTracker v.1.0.0</div>
      </div>
    </div>
  </footer>
  <script>
     // Initialize with the current date
    let currentDate = new Date();
    let formattedDate = currentDate.toLocaleDateString("en-US", { month: '2-digit', day: '2-digit', year: 'numeric' }).split("/").join("/");

    // Function to display the current date in the format --/--/--
    function displayDate() {
        document.getElementById("dateDisplay").innerHTML = formattedDate;
    }

    function displayDay() {
        const day = currentDate.toLocaleDateString("en-US", {
        weekday: "long",
        });
        document.getElementById("displayDay").innerHTML = day;
    }

    // Function to go back one day
    function goBack() {
        currentDate.setDate(currentDate.getDate() - 1);
        formattedDate = currentDate.toLocaleDateString("en-US", { month: '2-digit', day: '2-digit', year: 'numeric' }).split("/").join("/");
        displayDate();
        displayDay();
        console.log('Went back. Formatted Date:', formattedDate);
        // Call a function to update the tasks based on the new formattedDate
        updateTasks();
    }

    // Function to go forward one day
    function goForward() {
        currentDate.setDate(currentDate.getDate() + 1);
        formattedDate = currentDate.toLocaleDateString("en-US", { month: '2-digit', day: '2-digit', year: 'numeric' }).split("/").join("/");
        displayDate();
        displayDay();
        console.log('Went forward. Formatted Date:', formattedDate);
        // Call a function to update the tasks based on the new formattedDate
        updateTasks();
    }

    async function fetchTasksByDate(date) {
      const response = await fetch(`/fetch-tasks?date=${date}`);
      const data = await response.json();
      return data.tasks;
    }

    // Function to update tasks based on the selected date
    async function updateTasks() {
      try {
        const tasks = await fetchTasksByDate(formattedDate);

        const tasksMessage = document.getElementById("task-message");
        tasksMessage.innerHTML = '';

        if (tasks.length > 0) {
            tasks.forEach(task => {
                const taskElement = document.createElement("p");
                taskElement.innerHTML = `Task: ${task.taskTitle}<br>Date: ${task.date}<br>Time: ${task.time}<br>Description: ${task.description}`;
                tasksMessage.appendChild(taskElement);
            });
        } else {
            const noTasksMessage = document.createElement("p");
            noTasksMessage.innerHTML = "No tasks for this date! Use 'Create Task' to plan something or enjoy a free day. ðŸŒŸ";
            tasksMessage.appendChild(noTasksMessage);
        }
      } catch (error) {
          console.error('Error fetching tasks:', error);
      }
    }

  </script>
</body>
</html>